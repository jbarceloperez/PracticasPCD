##################################
### PSEUDOCÓDIGO PRÁCTICAS PCD ###
##################################

# EJERCICIO 1 ELENA #

program Ejercicio1;
var
 suma, apuntados : integer;
 l1, l2, l3: lock;
 
// calcula las sumas parciales de los términos pares
process type sumadorPares(id : integer, numeros : array[0..4999]);
var sumaParcial, elementos, restantes, recorrido, x: integer;
const MAX_NUMEROS : 250;
begin
 sumaParcial := 0;
 elementos := 0;
 restantes := MAX_NUMEROS;
 recorrido := 0;
 x := 0;
 while elementos < MAX_NUMEROS do
 begin
	 // Obtiene un valor aleatorio de números que quiere procesar en esta
	 // iteración pero teniendo en cuenta la cantidad restante de números que quedan
	 // para ese hilo
	 x := generarNumerosaleatorio(restantes); // Con esta variable obtiene la primera posición del array números
	 l1.lock //SC-COMIENZO: Asociada al recurso global apuntados
	 recorrido := apuntados;
	 apuntados := apuntados + x;
	 l1.unlock //SC-FIN: Asociada al recurso global apuntados
	 
	 // Acceder al array para analizar X valores no analizados todavía
	 for i:= recorrido to (recorrido+x) do
	 si (numeros[i]%2 = 0) then
	 // Calcular la suma parcial de los X valores que sean número par
	 sumaParcial := sumaParcial + numeros[i];
	 elementos = elementos + x;
	 restantes = restantes - x;
 end; // hasta haber analizado 250 elementos
 // Incorporar la suma parcial a la suma total
 l2.lock //SC-COMIENZO: Asociada al recurso global suma
 suma := suma + sumaParcial;
 l2.unlock //SC-FIN: Asociada al recurso global suma
 
 // Mostrar suma parcial y la total (por ahora) en la pantalla
 l3.lock //SC-COMIENZO: Asociada a la pantalla
 writeln("Hilo ", id);
 writeln("Suma Parcial = ", sumaParcial);
 writeln("Fin hilo ", id);
 writeln("----------------------------");
 l3.unlock //SC-FIN: Asociada a la pantalla
end;

const
 NHILOS : 20;
 NUMEROS : 5000;
 RANGO_NUMEROS : 101;
var
 h: array[1..NHILOS] of sumadorPares;
 numeros : array[1..NUMEROS] of integer;
begin
 // inicialización
 suma := 0;
 apuntados := 0;
 // Generar array de 5000 números
 for i:= 1 to NUMEROS do
 numeros[i] = generarNumerosaleatorio(RANGO_NUMEROS);
 
 // Condición de sincronización
 cobegin
 for i:= 1 to NHILOS do
 sumadorPares[i](i, numeros);
 coend;
 // En exclusión mutua
 writeln("-----------------ARRAY--------------------------");
 for i:= 1 to 250 do{
 for i:= 1 to NHILOS
 write(numeros[i+j], " ");
 writeln();
 }
 writeln("-----------------------------------------------");
 // suma total de valores pares =
 writeln("Suma total de valores pares = ", suma);
end;


# EJERCICIO 1 JAVI #

program ejercicio1;

process type HiloOrdenAlfabetico(id : integer, frases : array[0..49]);
var
	

const
	NUMTHREADS : 50;
	NUMFRASES : 50;

var
	thrs : array[1..NUMTHREADS] of HiloOrdenAlfabetico;
	frases : array[1..NUMFRASES] of string;
	
begin
	//generar array de 50 frases
	for i:=1 to NUMFRASES do
		frases[i] := generarFrase();
	
	cobegin
		for i:=1 to NUMTHREADS do
			thrs[i](i, frases);
	coend;
	// mutex
	
	writeln("Array");
	for i:=1 to NUMFRASES do
		writeln("Frase ",i,": ", frases[i]);
	writeln("Fin array");
end;




































